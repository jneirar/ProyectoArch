$date
	Tue Jul 27 19:37:31 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module alu_tb $end
$var wire 32 ! Result2 [31:0] $end
$var wire 32 " Result1 [31:0] $end
$var wire 4 # ALUFlags [3:0] $end
$var reg 3 $ ALUControl [2:0] $end
$var reg 4 % ALUFlags_expected [3:0] $end
$var reg 32 & Result_1_expected [31:0] $end
$var reg 32 ' Result_2_expected [31:0] $end
$var reg 32 ( a [31:0] $end
$var reg 32 ) b [31:0] $end
$var reg 1 * clk $end
$var reg 32 + errors [31:0] $end
$var reg 1 , reset $end
$var reg 32 - vectornum [31:0] $end
$scope module dut $end
$var wire 3 . ALUControl [2:0] $end
$var wire 32 / a [31:0] $end
$var wire 32 0 b [31:0] $end
$var wire 1 1 carry $end
$var wire 1 2 overflow $end
$var wire 32 3 signed_a [31:0] $end
$var wire 32 4 signed_b [31:0] $end
$var wire 1 5 zero $end
$var wire 33 6 sum [32:0] $end
$var wire 1 7 neg $end
$var wire 4 8 ALUFlags [3:0] $end
$var reg 32 9 Result1 [31:0] $end
$var reg 32 : Result2 [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx :
bx 9
bx 8
x7
bx 6
x5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
b0 -
1,
b0 +
1*
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#5
0*
#10
02
01
07
b1 6
b100 #
b100 8
15
b0 "
b0 9
b100 $
b100 .
b1 3
b1 (
b1 /
b0 4
b0 )
b0 0
b0 &
b100 %
1*
#15
0*
#17
0,
#20
1*
#25
b1 -
0*
#30
b101 #
b101 8
12
b1 !
b1 :
b101 $
b101 .
b10000000000000000000000000000000 3
b1111111111111111111111111111110 6
b10000000000000000000000000000000 (
b10000000000000000000000000000000 /
b10 4
b10 )
b10 0
b1 '
b101 %
1*
#35
b10 -
0*
#40
02
17
b0 !
b0 :
b1000 #
b1000 8
05
b10000000000000000000000000000000 "
b10000000000000000000000000000000 9
b110 $
b110 .
b1000000000000000000000000000000 3
b1000000000000000000000000000010 6
b1000000000000000000000000000000 (
b1000000000000000000000000000000 /
b10000000000000000000000000000000 &
b0 '
b1000 %
1*
#45
b11 -
0*
