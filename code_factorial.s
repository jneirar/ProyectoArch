// PROGRAMA CON LOOPS PARA CALCULAR EL FACTORIAL DE UN NÃšMERO N, DONDE 13 <= N < 20 
			SUB R0, R15, R15		// R0 = 0                  1110 0000 0100 1111 0000 0000 0000 1111 E04F000F      
			ADD R1, R0, #19			// R1 = n = 19             1110 0010 1000 0000 0001 0000 0001 0011 E2801013
			ADD R2, R0, #12			// R2 = m = 12             1110 0010 1000 0000 0010 0000 0000 1100 E280200C 
			SUB R3, R1, #20			// R3 = -1                 1110 0010 0100 0001 0011 0000 0001 0100 E2413014 
			ADD R4, R0, #1			// R4 = i = 1              1110 0010 1000 0000 0100 0000 0000 0001 E2804001 
			ADD R5, R0, #1			// R5 = fact1 = 1          1110 0010 1000 0000 0101 0000 0000 0001 E2805001
LOOP1:		SUBS R6, R4, R2			// i <= m?                 1110 0000 0101 0100 0110 0000 0000 0010 E0546002
			BGT END1				// Case: Yes, End loop     1100 1010 0000 0000 0000 0000 0000 0010 CA000002
			MUL R5, R5, R4			// fact1 = fact1 * i       1110 0000 0000 0101 0101 0000 1001 0100 E0055094
			ADD R4, R4, #1			// i = i + 1               1110 0010 1000 0100 0100 0000 0000 0001 E2844001
			B LOOP1					// Branch to LOOP1         1110 1010 1111 1111 1111 1111 1111 1010 EAFFFFFA 
END1:		ADD R6, R0, #1			// R6 = fact2 = 1          1110 0010 1000 0000 0110 0000 0000 0001 E2806001
LOOP2:		SUBS R7, R4, R1			// i <= n?                 1110 0000 0101 0100 0111 0000 0000 0001 E0547001
			BGT END2				// Case: Yes, End loop     1100 1010 0000 0000 0000 0000 0000 0010 CA000002
			MUL R6, R6, R4			// fact2 = fact2 * i       1110 0000 0000 0110 0110 0000 1001 0100 E0066094
			ADD R4, R4, #1			// i = i + 1               1110 0010 1000 0100 0100 0000 0000 0001 E2844001
			B LOOP2					// Branch to LOOP2         1110 1010 1111 1111 1111 1111 1111 1010 EAFFFFFA
END2:		UMULL R7, R5, R6, R8	// fact1 * fact2 = n!      1110 0000 1000 0101 1000 0111 1001 0110 E0858796
			SMULL R9, R5, R3, R10   // m! * -1 = -m!           1110 0000 1100 0101 1010 1001 1001 0011 E0C5A993
            STR R7, [R0, #100]		// Store at mem[100]       1110 0101 1000 0000 0111 0000 0110 0100 E5807064
			STR R8, [R0, #104]		// Store at mem[104]       1110 0101 1000 0000 1000 0000 0110 1000 E5808068
            STR R9, [R0, #108]		// Store at mem[108]       1110 0101 1000 0000 1001 0000 0110 1100 E580906C
            STR R10, [R0, #112]		// Store at mem[112]       1110 0101 1000 0000 1010 0000 0111 0000 E580A070